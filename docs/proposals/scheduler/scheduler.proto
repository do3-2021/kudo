syntax = "proto3";

package kudo.scheduler;

enum Status {
    RUNNING = 0;
    STARTING = 1;
    STOPPED = 2;
    STOPPING = 3;
    DESTROYING = 4;
    TERMINATED = 5;
    CRASHED = 6;
    FAILED = 7;
    SCHEDULING = 8;
    SCHEDULED = 9;
}

enum Action {
    START = 0;
    STOP = 1;
    DESTROY = 2;
    KILL = 3;
}

enum Type {
    CONTAINER = 0;
}

message Instance {
    string id = 1;
    string name = 2;
    Type type = 3;
    State state = 4;
    string uri = 5;
    [] string environnement = 6;
    Resource resource = 7;
    [] string ports = 8;
    string ip = 9;
}

message ResourceSummary {
    int cpu = 1;
    int memory = 2;
    int disk = 3;
}

message Resource {
    ResourceSummary max = 1;
    ResourceSummary usage = 2;
}

message InstanceStatus {
    string id = 1;
    Status status = 2;
    string description = 3;
}

message NodeStatus {
    string id = 1;
    Status status = 2;
    string description = 3;
    Resource resource = 4;
    [] Instance instances = 5;
}

message InstanceAction {
    string id = 1;
    Action action = 2;
}

message NodeRegisterRequest {
    string certificate = 1;
}

message NodeRegisterResponse {
    int code = 1;
    string description = 2;
    string subnet = 3;
}

service AgentService {
    rpc NodeRegister (NodeRegisterRequest) returns (NodeRegisterResponse) {}
    rpc NodeStatus (google.protobuf.Empty) returns (stream NodeStatus) {}
    rpc InstanceStatus (google.protobuf.Empty) returns (stream InstanceStatus) {}
}

service ControllerService {
    rpc InstanceCreate (Instance) returns (google.protobuf.Empty) {}
    rpc InstanceUpdate (InstanceAction) returns (google.protobuf.Empty) {}
}
